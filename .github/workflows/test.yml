name: Tests
on:
  pull_request:
    branches:
      - main
      - beta
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  HEALTHCHECK_IMAGE_NAME: distroless-dotnet-healthchecks
  HEALTHCHECK_IMAGE_TAG: test
  CI: true

jobs:
  build-healthcheck:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64
        base-image-type:
          - ubuntu-chiseled
          - alpine
        include:
          - target-os: linux
          - platform: amd64
            os: ubuntu-latest
          - platform: arm64
            os: ubuntu-24.04-arm
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: docker_build
        with:
          context: .
          file: src/Distroless.HealthChecks/Dockerfile
          target: binary
          platforms: ${{ matrix.target-os }}/${{ matrix.platform }}
          build-args: |
            BASE_IMAGE_TYPE=${{ matrix.base-image-type }}
          push: false
          tags: ${{ env.HEALTHCHECK_IMAGE_NAME }}:${{ env.HEALTHCHECK_IMAGE_TAG }}
          outputs: type=docker,dest=${{ runner.temp }}/image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.HEALTHCHECK_IMAGE_NAME }}-${{ matrix.target-os }}-${{ matrix.platform }}-${{ matrix.base-image-type }}
          path: ${{ runner.temp }}/image.tar

  test-ubuntu-chiseled:
    needs: build-healthcheck
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64
        chunk:
          - 1
          - 2
          - 3
        include:
          - target-os: linux
          - platform: amd64
            os: ubuntu-latest
          - platform: arm64
            os: ubuntu-24.04-arm
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/test-workflow.yml
    with:
      runs-on: ${{ matrix.os }}
      healthcheck_image: distroless-dotnet-healthchecks:test
      base-image-type: ubuntu-chiseled
      healthcheck_artifact: distroless-dotnet-healthchecks-${{ matrix.target-os }}-${{ matrix.platform }}-ubuntu-chiseled
      test_chunk: ${{ matrix.chunk }}

  test-alpine:
    needs: build-healthcheck
    strategy:
      fail-fast: false
      matrix:
        platform:
          - amd64
          - arm64
        include:
          - target-os: linux
          - platform: amd64
            os: ubuntu-latest
          - platform: arm64
            os: ubuntu-24.04-arm
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/test-workflow.yml
    with:
      runs-on: ${{ matrix.os }}
      healthcheck_image: distroless-dotnet-healthchecks:test
      base-image-type: alpine
      healthcheck_artifact: distroless-dotnet-healthchecks-${{ matrix.target-os }}-${{ matrix.platform }}-alpine
      test_chunk: all
