name: Nightly build
on:
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: ${{ github.workflow }}

permissions:
  contents: read

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  IMAGE_NAME: ${{ github.repository_owner }}/nightly/distroless-dotnet-healthchecks
  branch: main

jobs:
  check-run:
    outputs:
      should-run: ${{ steps.check_commit.outputs.should-run }}
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.branch }}
          persist-credentials: false
      - name: Check if last commit had a run
        id: check_commit
        continue-on-error: true
        run: |
          last_commit=$(git rev-parse HEAD)
          if gh run list --branch ${{ env.branch }} --json conclusion,headSha -q '[.[] | select(.headSha=="'$last_commit'")][0].conclusion' | grep -q 'success'; then
            echo "::notice::This commit has already been processed. Skipping."
            echo "should-run=false" >> $GITHUB_OUTPUT
          else
            echo "This commit has not been processed yet. Continuing."
            echo "should-run=true" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: [ check-run ]
    if: needs.check-run.outputs.should-run == 'true'
    environment: Nightly
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.branch }}
          persist-credentials: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            name=ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=edge
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      - name: Build and push
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        id: docker_build
        with:
          context: .
          file: src/Distroless.HealthChecks/Dockerfile
          target: final
          platforms: linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm64,linux/arm64/v8
          provenance: mode=max
          sbom: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      - name: Attest GitHub Container Registry
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2.2.0
        with:
          subject-name: ghcr.io/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: false
