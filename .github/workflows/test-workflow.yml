name: Tests workflow
on:
  workflow_call:
    inputs:
      runs-on:
        description: "Runner to use for tests"
        type: string
        required: true
      base-image-type:
        description: "Base image type to use for healthcheck"
        type: string
        required: false
        default: ubuntu-chiseled
      healthcheck_image:
        description: "Full image reference to use for healthcheck (e.g., foo/bar:tag@sha256:...)"
        type: string
        required: true
      healthcheck_artifact:
        description: "Artifact name to download for healthcheck image"
        type: string
        required: false


permissions: { }

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  CI: true

jobs:
  test:
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Download artifact
        if: ${{ inputs.healthcheck_artifact != '' }}
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: ${{ inputs.healthcheck_artifact }}
          path: ${{ runner.temp }}
      - name: Load image
        if: ${{ inputs.healthcheck_artifact != '' }}
        run: |
          docker load --input ${{ runner.temp }}/image.tar
      - name: Setup Dotnet
        id: dotnet-setup
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: |
            9.0.x
      - name: Setup Dotnet 10 preview
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: '10.0.x'
          dotnet-quality: 'preview'
      - name: DotNet tools restore
        run: dotnet tool restore
      - name: Run tests
        run: >-
          dotnet test
          --configuration Release
          --
          --crashdump
          --hangdump
          --hangdump-timeout 30m
          --retry-failed-tests 2
          --retry-failed-tests-max-tests 5
          --report-xunit-trx
          --max-threads 2
        env:
          BASE_IMAGE_TYPE: ${{ inputs.base-image-type }}
          HEALTHCHECK_IMAGE: ${{ inputs.healthcheck_image }}
      #      - name: Attest test results
      #        if: ${{ inputs.healthcheck_artifact == '' && success() && !cancelled() }}
      #        run: |
      #          echo '{"predicateType":"https://example.com/test-results/v1","predicate":{"status":"passed","commit":"${{ github.sha }}"}}' > test-att.json
      #          cosign attest \
      #            --keyless \
      #            --predicate test-att.json \
      #            --type custom-test-results \
      #            ${{ inputs.healthcheck_image }}
      - name: TRX report
        if: ${{ !cancelled() }}
        run: dotnet trx --gh-summary False --gh-comment True
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: TRX report upload
        if: ${{ failure() && !cancelled() }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: trx-reports
          path: "./**/*.trx"
      - name: Error log
        if: ${{ failure() && !cancelled() }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: error-log
          path: "./**/TestResults/Distroless.*.log"
