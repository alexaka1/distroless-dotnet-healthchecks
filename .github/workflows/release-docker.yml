name: Release docker images
on:
  workflow_call:
    inputs:
      package:
        type: string
        required: true
      image:
        type: string
        required: true
      target:
        type: string
        required: false
      platforms:
        type: string
        required: false
        default: linux/amd64
      readme:
        type: string
        required: false
        default: ./README.md
      context:
        type: string
        required: false
        default: "."
      run:
        type: boolean
        required: false
        default: true
      semver:
        type: string
        required: false
      major:
        type: string
        required: false
      minor:
        type: string
        required: false
      tag:
        type: string
        required: false
      environment:
        description: The environment to use for the release
        type: string
        required: true
    secrets:
      DOCKERHUB_TOKEN:
        required: true

permissions: { }

jobs:
  release-docker:
    name: Release docker images
    if: ${{ inputs.run }} # this is a github limitation https://github.com/orgs/community/discussions/37883
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    environment: ${{ inputs.environment }}
    permissions:
      contents: write # for tagging and gh release
      packages: write # for ghcr.io
      attestations: write # for attestations
      id-token: write # for tag signing
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # we use credentials to push tags below
          persist-credentials: true
      - uses: chainguard-dev/actions/setup-gitsign@58b5d1b6769b7e88dfa5c85bbc81a5a02eaca5bc
      - name: Create changelog for release
        id: changelog
        run: |
          input_file="${{ inputs.package }}/CHANGELOG.md"
          output_file="/tmp/changes.md"
          # Find the line number of the first version heading
          start_line=$(grep -nE '^## [0-9]+\.[0-9]+\.[0-9]' "$input_file" | head -n 1 | cut -d: -f1)

          # Find the line number of the next version heading, if it exists
          end_line=$(grep -nE '^## [0-9]+\.[0-9]+\.[0-9]' "$input_file" | sed -n '2p' | cut -d: -f1)

          if [ -z "$end_line" ]; then
            # If there is no next version, extract till the end of the file
            sed -n "${start_line},\$p" "$input_file" > "$output_file"
          else
            # Extract only the section for the uppermost version
            sed -n "${start_line},$(($end_line-1))p" "$input_file" > "$output_file"
          fi
          echo "changes=$output_file" >> "$GITHUB_OUTPUT"
          echo "prerelease=false" >> "$GITHUB_OUTPUT"
          if [ -f ".changeset/pre.json" ]; then
            echo "prerelease=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            name=ghcr.io/${{ inputs.image }}
            name=docker.io/${{ inputs.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}},priority=1001
            type=raw,value=${{ inputs.major }},enable=${{ inputs.major != '' && inputs.tag == '' && inputs.major != '0'  }},priority=902
            type=raw,value=${{ inputs.major }}.${{ inputs.minor }},enable=${{ inputs.major != '' && inputs.minor != '' && inputs.tag == '' }},priority=901
            type=raw,value=${{ inputs.semver }},enable=${{ inputs.semver != '' }},priority=900
            type=edge
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      - name: Build and push
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        id: docker_build
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.package }}/Dockerfile
          target: ${{ inputs.target }}
          platforms: ${{ inputs.platforms }}
          provenance: mode=max
          sbom: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      - name: Attest GitHub Container Registry
        uses: actions/attest-build-provenance@bd77c077858b8d561b7a36cbe48ef4cc642ca39d # v2.2.2
        with:
          subject-name: ghcr.io/${{ inputs.image }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: false
      - name: Attest Docker Hub
        uses: actions/attest-build-provenance@bd77c077858b8d561b7a36cbe48ef4cc642ca39d # v2.2.2
        with:
          subject-name: docker.io/${{ inputs.image }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: false
      - name: Tag release
        run: |
          git tag -s "${{ inputs.image }}-${{ inputs.semver }}" -m "Release ${{ inputs.image }}:${{ inputs.semver }}"
          git push origin ${{ inputs.image }}-${{ inputs.semver }}
      - name: Create GitHub release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        with:
          # files: |
          body_path: ${{ steps.changelog.outputs.changes }}
          body: Oh no, it looks like the change-notes were not generated correctly by the action.
          draft: false
          prerelease: ${{ fromJSON(steps.changelog.outputs.prerelease) }}
          generate_release_notes: true
          # fail_on_unmatched_files: true
          append_body: true
          tag_name: "${{ inputs.image }}-${{ inputs.semver }}"
          target_commitish: ${{ github.sha }}
          name: ${{ inputs.image }}:${{ inputs.semver }}
      - name: Update repo description
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4.0.0
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ inputs.image }}
          readme-filepath: ${{ inputs.readme }}
